<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://pengxiang-wang.github.io/</id><title>Shawn Wang</title><subtitle>(Descriptions. )</subtitle> <updated>2024-10-31T02:46:26+08:00</updated> <author> <name>Shawn Wang</name> <uri>https://pengxiang-wang.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://pengxiang-wang.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://pengxiang-wang.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 Shawn Wang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>编配：宫崎骏电影主题曲，手风琴二重奏</title><link href="https://pengxiang-wang.github.io/posts/accordion_transcribed_Miyazaki-Hayao-Movie-Themes/" rel="alternate" type="text/html" title="编配：宫崎骏电影主题曲，手风琴二重奏" /><published>2023-11-28T00:00:00+08:00</published> <updated>2023-11-28T16:09:11+08:00</updated> <id>https://pengxiang-wang.github.io/posts/accordion_transcribed_Miyazaki-Hayao-Movie-Themes/</id> <content src="https://pengxiang-wang.github.io/posts/accordion_transcribed_Miyazaki-Hayao-Movie-Themes/" /> <author> <name>Shawn Wang</name> </author> <category term="音乐" /> <summary> 这是一年前疫情在家搞的一个大工程。我将宫崎骏导演的所有十部电影的主题曲扒谱成了手风琴二重奏（其中特别喜欢《魔女宅急便》，增加一首）。为了尽量还原原版录音，不知道听了多少遍。 虽然是二重奏，但我在编配的时候始终保证主旋律在一声部上，所以！把谱子中二声部右手扔掉，就可以当独奏！ 以下是曲目列表。乐谱已上传至 MuseScore 和 B 站，有实时的声音与乐谱对照。 从天而降的少女，电影《天空之城》：MuseScore（该曲版权原因无法上传）, B 站，B 站独奏 阿席达卡传奇，电影《幽灵公主》； 人生的旋转木马，电影《哈尔的移动城堡》； 旅路（梦中飞行），电影《起风了》； 那个夏天，电影《千与千寻》； 娜乌西卡安魂曲，电影《风之谷》； 风之甬道，电影《龙猫》； 在晴朗的日子里，电影《魔女宅急便》； 临海小镇，电影《魔女宅急便》； 一去不复返... </summary> </entry> <entry><title>四音列及其应用</title><link href="https://pengxiang-wang.github.io/posts/tetrachord/" rel="alternate" type="text/html" title="四音列及其应用" /><published>2023-04-14T00:00:00+08:00</published> <updated>2023-04-18T21:05:31+08:00</updated> <id>https://pengxiang-wang.github.io/posts/tetrachord/</id> <content src="https://pengxiang-wang.github.io/posts/tetrachord/" /> <author> <name>Shawn Wang</name> </author> <category term="音乐" /> <summary> 四音列（tetrachord）在音乐历史上是一个很古老的概念，早在古希腊就用它来发展乐理；但现在对我们仍然有用，可以帮助我们理解和记忆很多东西，包括分解各种七音音阶、记忆和弦连接的 walking bass 等。本节就讨论四音列及其对乐理理解的帮助。 定义 四音列顾名思义即四个音的序列，可以看做迷你的音阶。音与音之间的间隔一般不超过小三度，所以它前后一般跨四度左右，而不是音阶通常的八度。 四音列有三个间隔，根据间隔的不同可作如下分类： 类型 间隔 跨度 大（major） W-W-H 四度 小（minor） W-H-W 四度 上小（upper minor） H... </summary> </entry> <entry><title>手风琴教程</title><link href="https://pengxiang-wang.github.io/posts/accordion_tutorial/" rel="alternate" type="text/html" title="手风琴教程" /><published>2023-03-25T00:00:00+08:00</published> <updated>2023-10-15T00:33:56+08:00</updated> <id>https://pengxiang-wang.github.io/posts/accordion_tutorial/</id> <content src="https://pengxiang-wang.github.io/posts/accordion_tutorial/" /> <author> <name>Shawn Wang</name> </author> <category term="音乐" /> <summary> 这是我个人整理的手风琴教程。注意本文不讨论广义的乐理，只讨论手风琴的技术与乐理在手风琴上的实现。关于乐理知识请参考我的其他博文。 本学期我担任北大手风琴协会零基础班的教学任务，本教程也可方便我的学员查阅，在最后附上课程安排。 目录 1. 附录：北大手协零基础班课程安排 1.1. 第一课：入门 1.2. 第二课：基本的音符 1.3. 第三课：大三和弦伴奏 1.4. 第四课：音阶与旋律 1.5. 第五课：小三和弦伴奏 1.6. 第六课：属七和弦与更多伴奏模式 1.7. 第七课：和声 1.8. 第八课：音阶与旋律（其他调） 1.9. 第九课：和声（其他调） 2. 手风琴常识 2.1. 分类 2.2. 构造与原理... </summary> </entry> <entry><title>Python 命令行解析参数</title><link href="https://pengxiang-wang.github.io/posts/studynotes_Python_argparse/" rel="alternate" type="text/html" title="Python 命令行解析参数" /><published>2023-03-20T00:00:00+08:00</published> <updated>2023-03-25T23:54:47+08:00</updated> <id>https://pengxiang-wang.github.io/posts/studynotes_Python_argparse/</id> <content src="https://pengxiang-wang.github.io/posts/studynotes_Python_argparse/" /> <author> <name>Shawn Wang</name> </author> <category term="科研" /> <summary> 本文介绍 Python 程序的命令行参数的定义和使用方法，主要为参数解析库 argparse 、处理配置文件 YAML 的库 PyYAML 的接口。 当运行的代码有多个参数并需要多次运行时，简单的处理方法是将参数放在代码里面的全局变量中，每次运行前修改变量的值。但这样需要大量的手动操作，非常费力且不够优雅；且这些参数本身在逻辑上属于程序的输入，将其与代码主体分离是更加合理的。 argparse 官方文档：https://docs.python.org/zh-cn/3/library/argparse.html sys.argv 在 Python 中，最简单的实现方式是借助 sys 库下的 argv 变量，这个在 Python 笔记中已经见过： ??/??/python ??/??/prog.py arg1 arg2 ... 在程序内这些参数通过 sys.argv 来接收... </summary> </entry> <entry><title>我的 Songbook 项目（长期更新）</title><link href="https://pengxiang-wang.github.io/posts/my_songbook_project/" rel="alternate" type="text/html" title="我的 Songbook 项目（长期更新）" /><published>2023-02-17T00:00:00+08:00</published> <updated>2023-03-01T22:12:22+08:00</updated> <id>https://pengxiang-wang.github.io/posts/my_songbook_project/</id> <content src="https://pengxiang-wang.github.io/posts/my_songbook_project/" /> <author> <name>Shawn Wang</name> </author> <category term="音乐" /> <summary> 我的 songbook 链接如下： Songbook PDF 版：https://pengxiang-wang.github.io/my-songbook/output/songbook.pdf Songbook HTML 版：https://pengxiang-wang.github.io/my-songbook/output/songbook.html GitHub 项目：https://github.com/pengxiang-wang/my-songbook 我一直想拥有属于我自己的 songbook。Songbook 是将一系列歌曲的歌词和和弦进行装订在一起，形成的一个小册子，方便在非正式的演奏中翻阅。可以理解为公园里演奏乐器的老大爷带的那种手写的简谱册哈哈。它不太好用一个精炼的中文词形容，叫“歌曲集、歌本”都感觉怪怪的，所以我就叫英文好了，别怪我说话夹英... </summary> </entry> </feed>
